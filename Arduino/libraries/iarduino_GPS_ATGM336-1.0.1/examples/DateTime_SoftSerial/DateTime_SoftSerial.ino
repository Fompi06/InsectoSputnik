// ПРИМЕР ВЫВОДИТ ДАТУ И ВРЕМЯ 5 РАЗ В СЕКУНДУ:    //
                                                   //
const uint8_t pinRX = 5;                           //  Определяем вывод RX (программного UART) на плате Arduino к которому подключён вывод TX модуля. Номер вывода можно изменить.
const uint8_t pinTX = 6;                           //  Определяем вывод TX (программного UART) на плате Arduino к которому подключён вывод RX модуля. Номер вывода можно изменить.
                                                   //
#include <iarduino_GPS_NMEA.h>                     //  Подключаем библиотеку для расшифровки строк протокола NMEA получаемых по UART.
#include <iarduino_GPS_ATGM336.h>                  //  Подключаем библиотеку для настройки параметров работы GPS модуля ATGM336.
#include <SoftwareSerial.h>                        //  Подключаем библиотеку для работы с программным UART.
                                                   //
iarduino_GPS_NMEA    gps;                          //  Объявляем объект gps         для работы с функциями и методами библиотеки iarduino_GPS_NMEA.
iarduino_GPS_ATGM336 SettingsGPS;                  //  Объявляем объект SettingsGPS для работы с функциями и методами библиотеки iarduino_GPS_ATGM336.
SoftwareSerial       SerialGPS(pinRX, pinTX);      //  Объявляем объект SerialGPS   для работы с функциями и методами библиотеки SoftwareSerial, указав выводы RX и TX Arduino.
                                                   //
char* wd[]={"Вс","Пн","Вт","Ср","Чт","Пт","Сб"};   //  Определяем массив строк содержащих по две первых буквы из названий дня недели.
                                                   //
void setup(){                                      //
//   Инициируем работу библиотек:                  //
     Serial.begin(9600);                           //  Инициируем работу с аппаратной шиной UART для вывода данных в монитор последовательного порта на скорости 9600 бит/сек.
     SettingsGPS.begin(SerialGPS);                 //  Инициируем работу с GPS модулем по указанной шине UART. Функция сама определит текущую скорость GPS модуля ATGM336 (вместо программной шины, можно указывать аппаратные: Serial, Serial1, Serial2, Serial3).
     gps.begin(SerialGPS);                         //  Инициируем расшифровку строк NMEA указав объект используемой шины UART (вместо программной шины, можно указывать аппаратные: Serial, Serial1, Serial2, Serial3).
//   Настраиваем работу модуля:                    //
     gps.timeZone(3);                              //  Указываем часовой пояс (±12 часов), или GPS_AutoDetectZone для автоматического определения часового пояса по долготе.
     SettingsGPS.baudrate(9600);                   //  Устанавливаем скорость передачи данных модулем и скорость работы шины UART в 9600 бит/сек.
     SettingsGPS.system(GPS_GP, GPS_GL);           //  Указываем что данные нужно получать от спутников навигационных систем GPS (GPS_GP) и Glonass (GPS_GL).
     SettingsGPS.composition(NMEA_ZDA);            //  Указываем что каждый пакет данных NMEA должен содержать только одну строку и этой строкой является идентификатор ZDA (информация о дате и времени).
     SettingsGPS.updaterate(10);                   //  Указываем обновлять данные 10 раз в секунду. Функция gps.read() читает данные в 2 раза медленнее чем их выводит модуль.
}                                                  //
                                                   //
void loop(){                                       //
     gps.read();                                   //  Читаем данные.
//   Выводим время:                                //
     Serial.print(gps.Hours  ); Serial.print(":"); //  Выводим час.
     Serial.print(gps.minutes); Serial.print(":"); //  Выводим минуты.
     Serial.print(gps.seconds); Serial.print(" "); //  Выводим секунды.
//   Выводим дату:                                 //
     Serial.print(gps.day    ); Serial.print("."); //  Выводим день месяца.
     Serial.print(gps.month  ); Serial.print("."); //  Выводим месяц.
     Serial.print(gps.year   ); Serial.print("г.");//  Выводим год.
//   Выводим день недели:                          //
     Serial.print(" (");                           //
     Serial.print(wd[gps.weekday]);                //  Выводим день недели.
     Serial.print("), ");                          //
//   Выводим количество секунд с начала эпохи Unix //
     Serial.print("UnixTime: ");                   //
     Serial.print(gps.Unix);                       //  Выводим время UnixTime.
     Serial.print("с.");                           //
//   Выводим информацию о наличии ошибок:          //
     if( gps.errTim ){                             //
         Serial.print(" Время недостоверно.");     //  Выводим информацию о недостоверном времени.
     }                                             //
     if( gps.errDat ){                             //
         Serial.print(" Дата недостоверна.");      //  Выводим информацию о недостоверной дате.
     }                                             //
//   Завершаем строку:                             //
     Serial.print("\r\n");                         //
}                                                  //
                                                   //
//   ПРИМЕЧАНИЕ:                                   //  ВАЖНО:
//   В скетче определён состав пакета NMEA         //  Уменьшение идентификаторов в составе пакета NMEA приводит
//   обращением к функции composition();           //  к уменьшению количества данных содержащихся в нём.
//   Но информация о дате и времени содержится     //  Например, строка идентификатора NMEA_ZDA содержит только дату и время
//   не только в идентификаторе NMEA_ZDA, а в      //  Рекомендуется использовать следующий состав пакета NMEA:
//   NMEA_RMC - рекоменд. минимум навигац. данных. //  SettingsGPS.composition(NMEA_RMC); - все данные, кроме высоты и данных о спутниках.
//   Информация о времени, без даты содержится в   //  SettingsGPS.composition(NMEA_RMC, NMEA_GGA); - все данные кроме данных о спутниках.
//   NMEA_GGA - данные о последнем местоположений. //  SettingsGPS.composition(NMEA_RMC, NMEA_GGA, NMEA_GSA, NMEA_GSV); - все данные.
//   NMEA_GLL - географические координаты.         //  
//   NMEA_GST - статистика ошибок позиционирования.//  
//   NMEA_DHV - информация о скорости движения.    //  